cmake_minimum_required(VERSION 2.8.3)
project(custom_navigation)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS message_generation roscpp sensor_msgs std_msgs nav_msgs message_filters tf)

## System dependencies are found with CMake's conventions
# find_package(Boost REQUIRED COMPONENTS system)


## Uncomment this if the package has a setup.py. This macro ensures
## modules and global scripts declared therein get installed
## See http://ros.org/doc/groovy/api/catkin/html/user_guide/setup_dot_py.html
# catkin_python_setup()

#######################################
## Declare ROS messages and services ##
#######################################

## Generate messages in the 'msg' folder
add_message_files(
  FILES
  M_ADC.msg
)

## Generate services in the 'srv' folder
add_service_files(
  FILES
  S_ADC.srv
  S_DigitalOut.srv
)

## Generate added messages and services with any dependencies listed here
generate_messages(
  DEPENDENCIES
  sensor_msgs std_msgs
)

###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
   INCLUDE_DIRS include
#  LIBRARIES ros4mat
   CATKIN_DEPENDS message_generation roscpp sensor_msgs std_msgs
#  DEPENDS system_lib
)

###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
include_directories(include
  ${catkin_INCLUDE_DIRS}
)

## Declare a cpp library
# add_library(ros4mat
#   src/${PROJECT_NAME}/ros4mat.cpp
# )

## Declare a cpp executable
# add_executable(ros4mat_node src/ros4mat_node.cpp)

## Add cmake target dependencies of the executable/library
## as an example, message headers may need to be generated before nodes
# add_dependencies(ros4mat_node ros4mat_generate_messages_cpp)

## Specify libraries to link a library or executable target against
# target_link_libraries(ros4mat_node
#   ${catkin_LIBRARIES}
# )

add_executable(adcClient src/adcClient.cpp)
target_link_libraries(adcClient ${catkin_LIBRARIES})
add_dependencies(adcClient custom_navigation_gencpp)

add_executable(adcDriver src/adcDriver.cpp)
target_link_libraries(adcDriver ${catkin_LIBRARIES})
add_dependencies(adcDriver custom_navigation_gencpp)

add_executable(adcParams src/adcParams.cpp)
target_link_libraries(adcParams ${catkin_LIBRARIES})
add_dependencies(adcParams custom_navigation_gencpp)

add_executable(odom_gyro src/odom_gyro.cpp)
target_link_libraries(odom_gyro ${catkin_LIBRARIES})
add_dependencies(odom_gyro custom_navigation_gencpp)

add_executable(gyro_calibration src/gyro_calibration.cpp)
target_link_libraries(gyro_calibration ${catkin_LIBRARIES})
add_dependencies(gyro_calibration custom_navigation_gencpp)

add_executable(robot_mover src/robot_mover.cpp)
target_link_libraries(robot_mover ${catkin_LIBRARIES})
add_dependencies(robot_mover custom_navigation_gencpp)

#############
## Install ##
#############

# all install targets should use catkin DESTINATION variables
# See http://ros.org/doc/groovy/api/catkin/html/adv_user_guide/variables.html

## Mark executable scripts (Python etc.) for installation
## in contrast to setup.py, you can choose the destination
# install(PROGRAMS
#   scripts/my_python_script
#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark executables and/or libraries for installation
# install(TARGETS ros4mat ros4mat_node
#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )
## Mark cpp header files for installation
# install(DIRECTORY include/${PROJECT_NAME}/
#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
#   FILES_MATCHING PATTERN "*.h"
#   PATTERN ".svn" EXCLUDE
# )

## Mark other files for installation (e.g. launch and bag files, etc.)
# install(FILES
#   # myfile1
#   # myfile2
#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
# )
